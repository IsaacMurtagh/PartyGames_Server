AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  "Party games Rest Api"

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment for deploying
  GamesTableParam:
    Type: String
    Default: Games
    AllowedValues:
      - Games
    Description: The name of the database table for games
  UsersTableParam:
    Type: String
    Default: Users
    AllowedValues:
      - Users
    Description: The name of the database table for users

Mappings:
  EnvironmentMap:
    dev:
      gamesTable: games-dev
      usersTable: users-dev
    prod:
      gamesTable: games-prod
      usersTable: users-prod

Globals:
  Function:
    Timeout: 2
    Runtime: nodejs14.x
    Environment:
      Variables:
          USERS_TABLE_NAME: !FindInMap [ EnvironmentMap, !Ref "Environment", usersTable ]
          GAMES_TABLE_NAME: !FindInMap [ EnvironmentMap, !Ref "Environment", gamesTable ]
  Api:
    Cors: "'*'"

Resources:
  RestApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Party Games Api Gateway
      StageName: api
      Models:
        Game: 
          type: object
          required:
            - type
            - allowNicknames
            - userId
          properties:
            type:
              type: string
            allowNicknames:
              type: boolean
            maxPartitions:
              type: integer
            name:
              type: string
            userId:
              type: string

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/_layers/common
      RetentionPolicy:  Delete
    Metadata:
      BuildMethod: nodejs14.x

  GameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/game
      Handler: app.handler
      Layers:
        - Ref: CommonLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ EnvironmentMap, !Ref "Environment", usersTable ]
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ EnvironmentMap, !Ref "Environment", gamesTable ]
      Events:
        GetGameApi:
          Type: Api
          Properties:
            RestApiId: 
              Ref: 'RestApiGateway'
            Path: /games/{gameId}
            Method: get
        CreateGameApi:
          Type: Api
          Properties:
            RestApiId: 
              Ref: 'RestApiGateway'
            Path: /games
            Method: post
            RequestModel:
              Model: Game
              Required: true
        JoinGameApi:
          Type: Api
          Properties:
            RestApiId: 
              Ref: 'RestApiGateway'
            Path: /games/{gameId}/join
            Method: post

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/user
      Handler: app.handler
      Runtime: nodejs14.x
      Layers:
        - Ref: CommonLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ EnvironmentMap, !Ref "Environment", usersTable ]
      Events:
        GetUserApi:
          Type: Api
          Properties:
            RestApiId: 
              Ref: 'RestApiGateway'
            Path: /users/{id}
            Method: get
        CreateUserApi:
          Type: Api
          Properties:
            RestApiId: 
              Ref: 'RestApiGateway'
            Path: /users
            Method: post

  GamesTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !FindInMap [ EnvironmentMap, !Ref "Environment", gamesTable ]
      Tags:
        - Key: Party_games_env
          Value: !Ref "Environment"
      AttributeDefinitions: 
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !FindInMap [ EnvironmentMap, !Ref "Environment", usersTable ]
      Tags:
        - Key: Party_games_env
          Value: !Ref "Environment"
      AttributeDefinitions: 
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  Api:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${RestApiGateway}.execute-api.${AWS::Region}.amazonaws.com/api"
